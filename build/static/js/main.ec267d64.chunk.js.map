{"version":3,"sources":["custom-hooks/useList.js","App.js","index.js"],"names":["useList","useState","list","setList","push","value","newlist","concat","pull","index","filter","listitem","listindex","App","todo","setTodo","id","onSubmit","event","preventDefault","alert","onsubmithandler","type","onChange","e","target","map","listItem","listIndex","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"oJAqBeA,G,MAnBC,WACd,MAAwBC,mBAAS,CAAC,SAAU,oBAAqB,aAAY,mBAAtEC,EAAI,KAAEC,EAAO,KAYpB,MAAO,CACLD,KAAMA,EACNE,KAZW,SAACC,GACZ,IAAMC,EAAUJ,EAAKK,OAAOF,GAC5BF,EAAQG,EACV,EAUEE,KATW,SAACC,GACZ,IAAMH,EAAUJ,EAAKQ,QAAO,SAACC,EAAUC,GACrC,OAAOA,IAAcH,CACvB,IACAN,EAAQG,EACV,EAMF,G,OCfe,SAASO,IAGtB,MAA6Bb,IAArBE,EAAI,EAAJA,KAAME,EAAI,EAAJA,KAAMI,EAAI,EAAJA,KACpB,EAAwBP,mBAAS,IAAG,mBAA7Ba,EAAI,KAAEC,EAAO,KAWpB,OACE,mCACE,8BACE,mCACE,uBACEC,GAAG,UACHC,SAAU,SAACC,IAfG,SAACA,GACvBA,EAAMC,iBACO,KAATL,GACFV,EAAKU,GACLC,EAAQ,KAERK,MAAM,+BAEV,CAQYC,CAAgBH,EAClB,EAAE,UAEF,uBAAOF,GAAG,MAAK,SAAC,qBAChB,uBACEA,GAAG,MACHM,KAAK,OACLC,SAAU,SAACC,GACTT,EAAQS,EAAEC,OAAOpB,MACnB,EACAA,MAAOS,IAET,wBAAQE,GAAG,aAAaM,KAAK,SAAQ,SAAC,WAKxC,6BACGpB,EAAKwB,KAAI,SAACC,EAAUC,GACnB,OACE,qCAGE,qBAAIZ,GAAG,KAAI,UACR,IACAW,EAAU,MAFIC,GAMjB,wBACEZ,GAAG,gBACHa,QAAS,WACPrB,EAAKoB,EACP,EAAE,SACH,aAKP,YAMZ,CCnEA,IAAME,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.ec267d64.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useList = () => {\r\n  const [list, setList] = useState([\"Go Gym\", \"Bring Eggs,Bnanas\", \"Medidate\"]);\r\n\r\n  const push = (value) => {\r\n    const newlist = list.concat(value);\r\n    setList(newlist);\r\n  };\r\n  const pull = (index) => {\r\n    const newlist = list.filter((listitem, listindex) => {\r\n      return listindex !== index;\r\n    });\r\n    setList(newlist);\r\n  };\r\n  return {\r\n    list: list,\r\n    push: push,\r\n    pull: pull\r\n  };\r\n};\r\nexport default useList;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n// Custom Hooks - To make the use of logic Reusable or DRY(Don't repeat yourself)\r\n\r\nimport useList from \"./custom-hooks/useList\";\r\nexport default function App() {\r\n  //Using CUSTOM HOOKS\r\n\r\n  const { list, push, pull } = useList();\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  const onsubmithandler = (event) => {\r\n    event.preventDefault();\r\n    if (todo !== \"\") {\r\n      push(todo);\r\n      setTodo(\"\"); //Reseting the input value text again to empty\r\n    } else {\r\n      alert(\"Please type something to add\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <header>\r\n          <form\r\n            id=\"form_id\"\r\n            onSubmit={(event) => {\r\n              onsubmithandler(event);\r\n            }}\r\n          >\r\n            <label id=\"ui2\">Add Todo Items: </label>\r\n            <input\r\n              id=\"ui3\"\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setTodo(e.target.value);\r\n              }}\r\n              value={todo}\r\n            />\r\n            <button id=\"add_button\" type=\"submit\">\r\n              Add\r\n            </button>\r\n          </form>\r\n\r\n          <h5>\r\n            {list.map((listItem, listIndex) => {\r\n              return (\r\n                <>\r\n                  {/* Mapping the Added Elements in List */}\r\n\r\n                  <li id=\"ui\" key={listIndex}>\r\n                    {\" \"}\r\n                    {listItem}{\" \"}\r\n                  </li>\r\n\r\n                  {/* Remove Button */}\r\n                  <button\r\n                    id=\"remove_button\"\r\n                    onClick={() => {\r\n                      pull(listIndex);\r\n                    }}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </>\r\n              );\r\n            })}\r\n          </h5>\r\n        </header>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}